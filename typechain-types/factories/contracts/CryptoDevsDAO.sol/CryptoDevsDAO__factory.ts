/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  CryptoDevsDAO,
  CryptoDevsDAOInterface,
} from "../../../contracts/CryptoDevsDAO.sol/CryptoDevsDAO";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_nftMarketplace",
        type: "address",
      },
      {
        internalType: "address",
        name: "_nftContract",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    stateMutability: "payable",
    type: "fallback",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_forTokenId",
        type: "uint256",
      },
      {
        internalType: "enum CryptoDevsDAO.ProposalType",
        name: "__proposalType",
        type: "uint8",
      },
    ],
    name: "createProposal",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "cryptoDevsNFT",
    outputs: [
      {
        internalType: "contract ICryptoDevsNFT",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_proposalId",
        type: "uint256",
      },
    ],
    name: "executeProposal",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "members",
    outputs: [
      {
        internalType: "uint256",
        name: "joinedAt",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "nftMarketplace",
    outputs: [
      {
        internalType: "contract INFTMarketplace",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "numProposals",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "onERC721Received",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "proposals",
    outputs: [
      {
        internalType: "uint256",
        name: "nftTokenId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "deadline",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "againstVotes",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "forVotes",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "executed",
        type: "bool",
      },
      {
        internalType: "enum CryptoDevsDAO.ProposalType",
        name: "proposalType",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "quit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "tokenLocked",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalVotingPower",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_proposalId",
        type: "uint256",
      },
      {
        internalType: "enum CryptoDevsDAO.VoteType",
        name: "_vote",
        type: "uint8",
      },
    ],
    name: "voteOnProposal",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x60806040523480156200001157600080fd5b5060405162002069380380620020698339818101604052810190620000379190620000d7565b816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550505062000166565b600081519050620000d1816200014c565b92915050565b60008060408385031215620000eb57600080fd5b6000620000fb85828601620000c0565b92505060206200010e85828601620000c0565b9150509250929050565b600062000125826200012c565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b620001578162000118565b81146200016357600080fd5b50565b611ef380620001766000396000f3fe6080604052600436106100ab5760003560e01c806346694b7d1161006457806346694b7d1461020157806351ef182d1461023e578063671b379314610269578063d087eb2114610294578063efafb22e146102bf578063fc2b8cc3146102e8576100b2565b8063013cf08b146100b457806308ae4b0c146100f65780630d61b51914610133578063150b7a021461015c57806332c378ea14610199578063400e3949146101d6576100b2565b366100b257005b005b3480156100c057600080fd5b506100db60048036038101906100d69190611493565b6102ff565b6040516100ed96959493929190611958565b60405180910390f35b34801561010257600080fd5b5061011d60048036038101906101189190611398565b610355565b60405161012a919061193d565b60405180910390f35b34801561013f57600080fd5b5061015a60048036038101906101559190611493565b610373565b005b34801561016857600080fd5b50610183600480360381019061017e91906113ea565b6106eb565b60405161019091906117ac565b60405180910390f35b3480156101a557600080fd5b506101c060048036038101906101bb91906114e5565b610830565b6040516101cd919061193d565b60405180910390f35b3480156101e257600080fd5b506101eb610bf1565b6040516101f8919061193d565b60405180910390f35b34801561020d57600080fd5b5061022860048036038101906102239190611493565b610bf7565b6040516102359190611791565b60405180910390f35b34801561024a57600080fd5b50610253610c17565b60405161026091906117e2565b60405180910390f35b34801561027557600080fd5b5061027e610c3b565b60405161028b919061193d565b60405180910390f35b3480156102a057600080fd5b506102a9610c41565b6040516102b691906117c7565b60405180910390f35b3480156102cb57600080fd5b506102e660048036038101906102e19190611521565b610c67565b005b3480156102f457600080fd5b506102fd610f4e565b005b60026020528060005260406000206000915090508060000154908060010154908060020154908060030154908060040160009054906101000a900460ff16908060040160019054906101000a900460ff16905086565b60036020528060005260406000206000915090508060000154905081565b600060026000838152602001908152602001600020905080600101544210156103d1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103c8906118fd565b60405180910390fd5b8060040160009054906101000a900460ff1615610423576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161041a9061191d565b60405180910390fd5b60018160040160006101000a81548160ff0219169083151502179055508060020154816003015411156106e7576000600181111561048a577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b8160040160019054906101000a900460ff1660018111156104d4577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b14156106565760008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663ede287446040518163ffffffff1660e01b815260040160206040518083038186803b15801561054357600080fd5b505afa158015610557573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061057b91906114bc565b9050804710156105c0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105b79061183d565b60405180910390fd5b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663efef39a18284600001546040518363ffffffff1660e01b815260040161061e919061193d565b6000604051808303818588803b15801561063757600080fd5b505af115801561064b573d6000803e3d6000fd5b5050505050506106e6565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663e4849b3282600001546040518263ffffffff1660e01b81526004016106b3919061193d565b600060405180830381600087803b1580156106cd57600080fd5b505af11580156106e1573d6000803e3d6000fd5b505050505b5b5050565b60006004600085815260200190815260200160002060009054906101000a900460ff161561074e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610745906118dd565b60405180910390fd5b6000600360008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002090506000816001018054905014156107ab574281600001819055505b60016004600087815260200190815260200160002060006101000a81548160ff0219169083151502179055506001600660008282546107ea91906119db565b925050819055508060010185908060018154018082558091505060019003906000526020600020016000909190919091505563150b7a0260e01b91505095945050505050565b600080600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010180549050116108b9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108b0906118bd565b60405180910390fd5b600060018111156108f3577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b82600181111561092c577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b1415610a1f5760008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166396e494e8846040518263ffffffff1660e01b815260040161098b919061193d565b60206040518083038186803b1580156109a357600080fd5b505afa1580156109b7573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109db919061146a565b610a1a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a11906117fd565b60405180910390fd5b610b36565b3073ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16636352211e856040518263ffffffff1660e01b8152600401610a8f919061193d565b60206040518083038186803b158015610aa757600080fd5b505afa158015610abb573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610adf91906113c1565b73ffffffffffffffffffffffffffffffffffffffff1614610b35576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b2c9061187d565b60405180910390fd5b5b600060026000600554815260200190815260200160002090508381600001819055506201518042610b6791906119db565b8160010181905550828160040160016101000a81548160ff02191690836001811115610bbc577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b021790555060056000815480929190610bd490611bd1565b91905055506001600554610be89190611abc565b91505092915050565b60055481565b60046020528060005260406000206000915054906101000a900460ff1681565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60065481565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206001018054905011610cef576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ce6906118bd565b60405180910390fd5b600060026000848152602001908152602001600020905080600101544210610d4c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d439061185d565b60405180910390fd5b8060050160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1615610ddb576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610dd29061189d565b60405180910390fd5b60018160050160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055506000600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600101805490509050600180811115610eb8577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b836001811115610ef1577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b1415610f175780826003016000828254610f0b91906119db565b92505081905550610f33565b80826002016000828254610f2b91906119db565b925050819055505b81600101544210610f4857610f4784610373565b5b50505050565b6000600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206001018054905011610fd6576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610fcd906118bd565b60405180910390fd5b6000600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020905062278d0081600001544261102d9190611abc565b1161106d576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016110649061181d565b60405180910390fd5b6000816001018054905090506000600654824761108a9190611a62565b6110949190611a31565b905060005b828110156111bd5760008460010182815481106110df577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b9060005260206000200154905060006004600083815260200190815260200160002060006101000a81548160ff021916908315150217905550600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663b88d4fde3033846040518463ffffffff1660e01b815260040161117793929190611747565b600060405180830381600087803b15801561119157600080fd5b505af11580156111a5573d6000803e3d6000fd5b505050505080806111b590611bd1565b915050611099565b5081600660008282546111d09190611abc565b925050819055503373ffffffffffffffffffffffffffffffffffffffff166108fc829081150290604051600060405180830381858888f1935050505015801561121d573d6000803e3d6000fd5b50600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600080820160009055600182016000611276919061127d565b5050505050565b508054600082559060005260206000209081019061129b919061129e565b50565b5b808211156112b757600081600090555060010161129f565b5090565b6000813590506112ca81611e58565b92915050565b6000815190506112df81611e58565b92915050565b6000815190506112f481611e6f565b92915050565b60008083601f84011261130c57600080fd5b8235905067ffffffffffffffff81111561132557600080fd5b60208301915083600182028301111561133d57600080fd5b9250929050565b60008135905061135381611e86565b92915050565b60008135905061136881611e96565b92915050565b60008135905061137d81611ea6565b92915050565b60008151905061139281611ea6565b92915050565b6000602082840312156113aa57600080fd5b60006113b8848285016112bb565b91505092915050565b6000602082840312156113d357600080fd5b60006113e1848285016112d0565b91505092915050565b60008060008060006080868803121561140257600080fd5b6000611410888289016112bb565b9550506020611421888289016112bb565b94505060406114328882890161136e565b935050606086013567ffffffffffffffff81111561144f57600080fd5b61145b888289016112fa565b92509250509295509295909350565b60006020828403121561147c57600080fd5b600061148a848285016112e5565b91505092915050565b6000602082840312156114a557600080fd5b60006114b38482850161136e565b91505092915050565b6000602082840312156114ce57600080fd5b60006114dc84828501611383565b91505092915050565b600080604083850312156114f857600080fd5b60006115068582860161136e565b925050602061151785828601611344565b9150509250929050565b6000806040838503121561153457600080fd5b60006115428582860161136e565b925050602061155385828601611359565b9150509250929050565b61156681611af0565b82525050565b61157581611b02565b82525050565b61158481611b0e565b82525050565b61159381611b77565b82525050565b6115a281611b9b565b82525050565b6115b181611bbf565b82525050565b60006115c46011836119ca565b91506115cf82611ca7565b602082019050919050565b60006115e76014836119ca565b91506115f282611cd0565b602082019050919050565b600061160a6012836119ca565b915061161582611cf9565b602082019050919050565b600061162d600c836119ca565b915061163882611d22565b602082019050919050565b6000611650600d836119ca565b915061165b82611d4b565b602082019050919050565b6000611673600d836119ca565b915061167e82611d74565b602082019050919050565b6000611696600c836119ca565b91506116a182611d9d565b602082019050919050565b60006116b9600e836119ca565b91506116c482611dc6565b602082019050919050565b60006116dc6010836119ca565b91506116e782611def565b602082019050919050565b60006116ff6000836119b9565b915061170a82611e18565b600082019050919050565b60006117226010836119ca565b915061172d82611e1b565b602082019050919050565b61174181611b6d565b82525050565b600060808201905061175c600083018661155d565b611769602083018561155d565b6117766040830184611738565b8181036060830152611787816116f2565b9050949350505050565b60006020820190506117a6600083018461156c565b92915050565b60006020820190506117c1600083018461157b565b92915050565b60006020820190506117dc600083018461158a565b92915050565b60006020820190506117f76000830184611599565b92915050565b60006020820190508181036000830152611816816115b7565b9050919050565b60006020820190508181036000830152611836816115da565b9050919050565b60006020820190508181036000830152611856816115fd565b9050919050565b6000602082019050818103600083015261187681611620565b9050919050565b6000602082019050818103600083015261189681611643565b9050919050565b600060208201905081810360008301526118b681611666565b9050919050565b600060208201905081810360008301526118d681611689565b9050919050565b600060208201905081810360008301526118f6816116ac565b9050919050565b60006020820190508181036000830152611916816116cf565b9050919050565b6000602082019050818103600083015261193681611715565b9050919050565b60006020820190506119526000830184611738565b92915050565b600060c08201905061196d6000830189611738565b61197a6020830188611738565b6119876040830187611738565b6119946060830186611738565b6119a1608083018561156c565b6119ae60a08301846115a8565b979650505050505050565b600082825260208201905092915050565b600082825260208201905092915050565b60006119e682611b6d565b91506119f183611b6d565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115611a2657611a25611c1a565b5b828201905092915050565b6000611a3c82611b6d565b9150611a4783611b6d565b925082611a5757611a56611c49565b5b828204905092915050565b6000611a6d82611b6d565b9150611a7883611b6d565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615611ab157611ab0611c1a565b5b828202905092915050565b6000611ac782611b6d565b9150611ad283611b6d565b925082821015611ae557611ae4611c1a565b5b828203905092915050565b6000611afb82611b4d565b9050919050565b60008115159050919050565b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b6000819050611b4882611e44565b919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b6000611b8282611b89565b9050919050565b6000611b9482611b4d565b9050919050565b6000611ba682611bad565b9050919050565b6000611bb882611b4d565b9050919050565b6000611bca82611b3a565b9050919050565b6000611bdc82611b6d565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415611c0f57611c0e611c1a565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b7f4e46545f4e4f545f415641494c41424c45000000000000000000000000000000600082015250565b7f4e4f545f454c494749424c455f544f5f51554954000000000000000000000000600082015250565b7f494e53554646494349454e545f46554e44530000000000000000000000000000600082015250565b7f564f54494e475f454e4445440000000000000000000000000000000000000000600082015250565b7f4e46545f4e4f545f4f574e454400000000000000000000000000000000000000600082015250565b7f414c52454144595f564f54454400000000000000000000000000000000000000600082015250565b7f4e4f545f415f4d454d4245520000000000000000000000000000000000000000600082015250565b7f414c52454144595f4c4f434b4544000000000000000000000000000000000000600082015250565b7f564f54494e475f4e4f545f454e44454400000000000000000000000000000000600082015250565b50565b7f414c52454144595f455845435554454400000000000000000000000000000000600082015250565b60028110611e5557611e54611c78565b5b50565b611e6181611af0565b8114611e6c57600080fd5b50565b611e7881611b02565b8114611e8357600080fd5b50565b60028110611e9357600080fd5b50565b60028110611ea357600080fd5b50565b611eaf81611b6d565b8114611eba57600080fd5b5056fea2646970667358221220915b4268bc5bd5883592daf5d09dcd13da45ae9cb0ad0d4ac61fd954ec9d44da64736f6c63430008040033";

type CryptoDevsDAOConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: CryptoDevsDAOConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class CryptoDevsDAO__factory extends ContractFactory {
  constructor(...args: CryptoDevsDAOConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _nftMarketplace: PromiseOrValue<string>,
    _nftContract: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<CryptoDevsDAO> {
    return super.deploy(
      _nftMarketplace,
      _nftContract,
      overrides || {}
    ) as Promise<CryptoDevsDAO>;
  }
  override getDeployTransaction(
    _nftMarketplace: PromiseOrValue<string>,
    _nftContract: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _nftMarketplace,
      _nftContract,
      overrides || {}
    );
  }
  override attach(address: string): CryptoDevsDAO {
    return super.attach(address) as CryptoDevsDAO;
  }
  override connect(signer: Signer): CryptoDevsDAO__factory {
    return super.connect(signer) as CryptoDevsDAO__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): CryptoDevsDAOInterface {
    return new utils.Interface(_abi) as CryptoDevsDAOInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): CryptoDevsDAO {
    return new Contract(address, _abi, signerOrProvider) as CryptoDevsDAO;
  }
}
